<% @title = "Upload CSV of public authorities" %>

<h1><%=@title%></h1>

<% if not @notes.empty? %>
<pre id="notice"><%=@notes %></pre>
<% end %>
<% if not @errors.empty? %>
<pre id="error"><%=@errors %></pre>
<% end %>


<% form_tag 'import_csv', :multipart => true do %>
    <p>
    <label for="csv_file">CSV file:</label>
    <%= file_field_tag :csv_file, :size => 40 %> 
    </p>
    
    <p>
    <label for="tag">Optional: Tag to add entries to / alter entries for:</label>
    <%= text_field_tag 'tag', params[:tag] %>
    </p>

    <p><strong>CSV file format:</strong> A first row with the list of fields, 
    starting with '#', is optional but highly recommended. The fields 'name'
    and 'request_email' are required; additionaly, translated values are supported by
    adding the locale name to the field name, e.g. 'name.es', 'name.de'... Example:
    </p>
    
    <blockquote>
        #id,name,request_email,name.es<br/>
        1,An Authority,a@example.com,Un organismo<br/>
        2,Another One,another@example.com,Otro organismo<br/>
    </blockquote>

    <p>Supported files: name (i18n), short_name (i18n), request_email (i18n), notes (i18n), 
    publication_scheme (i18n), home_page.</p>
    
    <p><strong>Note:</strong> Choose <strong>dry run</strong> to test, without
    actually altering the database. Choose <strong>upload</strong> to actually
    make the changes. In either case, you will be shown any errors, or details
    of the changes.  When uploading, any changes since last import will be
    overwritten - e.g.  email addresses changed back.
    </p>

    <p><%= submit_tag 'Dry run' %> <%= submit_tag 'Upload' %></p>
<% end %>

<hr>

<p>Standard tags: 
    <% for category, description in PublicBodyCategories::CATEGORIES_BY_TAG %>
        <% if category != "other" %>
            <strong><%= category %></strong>=<%= description %>;
        <% end %>
    <% end %>
    </p>

